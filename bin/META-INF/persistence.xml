<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence 
             http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">
    <persistence-unit name="demojpa-pu"> <!--ce nom sera utilisé dans la DAO  --> 
        <properties>
            <property name="hibernate.archive.autodetection" value="class" /> <!-- value true permet de voir ce qu'il se passe -->
            <property name="hibernate.show_sql" value="true" /> 
            <property name="hibernate.format_sql" value="true" />
 
            <!-- Configuration de la  BDD -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver" />
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/architecture" />
            <property name="javax.persistence.jdbc.user" value="postgres" />
            <property name="javax.persistence.jdbc.password" value="javajee" />
 
            <!-- Spécifie le 'dialecte' SQL utilisé pour communiquer avec la BDD -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" /> <!-- pour utiliser une bdd mysql il faut changer les mots postgresql par mysql -->
 
            <!-- Indique a Hibernate de (re-)créer la BDD au lancement de l'application -->
       <!--     <property name="hibernate.hbm2ddl.auto" value="create" />  -->  
          <!-- 	option qui permet de créer les tables en bdd. avant de lancer les requetes 
		il faut commenter cette ligne. pour rajouter des tables sans modifier des choses 
		avant on change le mot create par update, sinon on fait create pour refaire toute la base de donnees -->
        </properties>
 
    </persistence-unit>
</persistence>